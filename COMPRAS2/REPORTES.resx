<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOK.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>